# Dockerfile
# Use a slim Python image for smaller size
FROM python:3.12-slim-bookworm

# Set environment variables to prevent Python from writing .pyc files
# and to ensure stdout/stderr are unbuffered
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set the working directory inside the container
WORKDIR /app

# Copy requirements.txt and install dependencies
# This step is often done first to leverage Docker's build cache
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy your application code
# Assuming your FastAPI app is in 'main.py' at the root of your app directory
COPY . .

# Expose the port your ASGI server will listen on
EXPOSE 8000

# Command to run your FastAPI application with Uvicorn (or Gunicorn + Uvicorn workers)
# Using Gunicorn with Uvicorn workers is recommended for production for process management
#CMD ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "main:app", "--bind", "0.0.0.0:8000"]
# Or for simple development:
 CMD ["uvicorn", "pyegeria_handler:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]