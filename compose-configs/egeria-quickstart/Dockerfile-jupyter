# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.

# This build script corrects some permission issues needed to run
# on some enterprise k8s environments. see https://github.com/odpi/egeria-jupyter-notebooks/issues/9

# The published image tag is taken from the numerical version of
# our base image, and appended with the contents of .tag-append (file)
FROM quay.io/jupyter/scipy-notebook
ARG env_name=python312
ARG py_ver=3.12
ENV JUPYTER_ENABLE_LAB=yes

# Much of the following is commented out as it is a bit unstable - but it does allow you to install the latest
# python in the jupyter container - which can then be selected as an alternate kernel within Jupyter.

#RUN mamba create --yes -p "${CONDA_DIR}/envs/${env_name}" \
#    python=${py_ver} \
#    'ipykernel' \
#    'jupyterlab' && \
#    mamba clean --all -f -y

#COPY --chown=${NB_UID}:${NB_GID} environment.yml /tmp/
#RUN mamba env create -p "${CONDA_DIR}/envs/${env_name}" -f /tmp/environment.yml && \
#    mamba clean --all -f -y


#RUN "${CONDA_DIR}/envs/${env_name}/bin/python" -m ipykernel install --user --name="${env_name}" && \
#    fix-permissions "${CONDA_DIR}" && \
#    fix-permissions "/home/${NB_USER}"
#
#RUN "${CONDA_DIR}/envs/${env_name}/bin/pip3" install --no-cache-dir 'pyegeria>=0.5.5.16'
#RUN "${CONDA_DIR}/envs/${env_name}/bin/pip3" install --no-cache-dir 'rich'
#RUN "${CONDA_DIR}/envs/${env_name}/bin/pip3" install --no-cache-dir 'unitycatalog'
#RUN "${CONDA_DIR}/envs/${env_name}/bin/pip3" install --no-cache-dir 'pipx'
#RUN "${CONDA_DIR}/envs/${env_name}/bin/pipx" install pyegeria
#RUN "${CONDA_DIR}/envs/${env_name}/bin/pipx" ensurepath
#
USER root
#RUN \
#     # This changes a startup hook, which will activate the custom environment for the process
#     echo conda activate "${env_name}" >> /usr/local/bin/before-notebook.d/10activate-conda-env.sh && \
#     # This makes the custom environment default in Jupyter Terminals for all users which might be created later
#     echo conda activate "${env_name}" >> /etc/skel/.bashrc && \
#     # This makes the custom environment default in Jupyter Terminals for already existing NB_USER
#     echo conda activate "${env_name}" >> "/home/${NB_USER}/.bashrc"
#
# Install Node.js and npm
#RUN apt-get update && apt-get install -y \
#    curl && \
#    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
#    apt-get install -y nodejs && \
#    npm install -g npm@latest && \
#    apt-get clean && rm -rf /var/lib/apt/lists/*

## Install Mermaid.js globally - The pyegeria functions seeme to be working sufficiently well so that we don't need to explicitly install mermaid.js
#RUN npm install -g mermaid
#RUN npm install -g mermaid.cli
#sudo chown -R 1000:100 "/home/jovyan/.npm"

USER ${NB_UID}
RUN pip install --no-cache-dir 'pyegeria'
RUN pip install --no-cache-dir 'rich'
RUN pip install --no-cache-dir 'unitycatalog'
RUN pip install --no-cache-dir 'pipx'
RUN pip install --no-cache-dir 'textual'
RUN pip install --no-cache-dir 'textual-dev'
RUN pip install --no-cache-dir 'apache-airflow-client'
RUN pip install --no-cache-dir 'jupyterlab_execute_time'
RUN pip install --no-cache-dir 'mermaid.py'
RUN pip install --no-cache-dir 'plotly'
RUN pip install --no-cache-dir 'dash'
RUN pip install --no-cache-dir 'pydevd-pycharm'



RUN pipx ensurepath
RUN pipx install pyegeria
RUN pipx ensurepath

RUN mkdir -p /home/jovyan/workbooks
RUN chmod +xrw /home/jovyan/workbooks
COPY ../Start-Here.md /home/jovyan
COPY ../custom.css /home/.jupyter


#RUN echo "export EGERIA_PLATFORM_URL= \'https://host.docker.internal:9443\'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_METADATA_STORE = 'active-metadata-store'" >> "/home/$(NB_USER}/.bashrc"
#
#RUN echo "export EGERIA_KAFKA_ENDPOINT = 'localhost:9092'" >> "/home/$(NB_USER}/.bashrc"
#
#RUN echo "export EGERIA_VIEW_SERVER = 'view-server'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_VIEW_SERVER_URL = 'https://localhost:9443'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_INTEGRATION_DAEMON = 'integration-daemon'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_INTEGRATION_DAEMON_URL = 'https://localhost:9443'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_ADMIN_USER = 'garygeeke'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_ADMIN_PASSWORD = 'secret'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_USER = 'erinoverview'" >> "/home/$(NB_USER}/.bashrc"
#RUN echo "export EGERIA_USER_PASSWORD = 'secret'" >> "/home/$(NB_USER}/.bashrc"

#    && \
#    fix-permissions "${CONDA_DIR}" && \
#    fix-permissions "/home/${NB_USER}" \

#ENTRYPOINT ["jupyter","notebook"]
#
#CMD ["python3", "/config_coco_core.py"]
#USER root

# Needed to dynamically add the selected user on startup - see link below
#RUN chmod g+w /etc/passwd
#
#RUN chown -R $NB_UID:$NB_GID $HOME
#
## https://cloud.redhat.com/blog/jupyter-on-openshift-part-6-running-as-an-assigned-user-id
#RUN chgrp -Rf root /home/$NB_USER && chmod -Rf g+w /home/$NB_USER && chgrp -Rf root /opt/conda && chmod -Rf g+w /opt/conda
#
#USER 1000
